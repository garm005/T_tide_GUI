function TCam_V1C(instruccion)
% _________________________________________________________________________
% Script con el cual es posible realizar el análisis de las mareas, usando
% el toolbox T_tide de R. Pawlowicz.
% Inputs de la función:
%       Proporcionar el nombre del archivo con los registros obtenidos de
%       los sensores.
% Outputs de la función:
%       Gráficas y archivo de la predicción de la marea.
%
% Referencias del T_tide toolbox:
% Pawlowicz, R., Beardsley, B. y Lentz, S. (2002). Classical tidal harmonic
%      analysis including error estimates in Matlab using T_Tide. Computers
%      & Geosciences. 28:929-937.
%
% Realizó: Gabriel Ruiz Martinez.
% Versión del script: 1.0 31/03/2010.
% Modificaciones:
% PredicT_TideV3_7
% 2/12/2011
% _________________________________________________________________________

% Iniciando el programa
if nargin == 0
   instruccion = 'iniciar';
end

% Declaracion de variables globales de la gui
global figu0 figu tampant FigureStart list1 list2 rbp4_1 rbp4_2 boton0
global rbp5_1 rbp5_2 rbp5_3 rbp5_4 rbp2_1 rbp2_2 editp2_1 textp2_1 glist1 elec
global hrbp5_1 hrbp5_2 hrbp5_3 hrbp5_4 hrbp4_1 hrbp4_2 textp3_1 editp3_1

if strcmp(instruccion,'iniciar')
        tampant = get(0,'screensize');
        
        figu0 = figure;
        set(figu0,'Units','pixels',...
                 'Menubar','none',...
                 'Resize','off',...
                 'Position',[tampant(1,3)*0.23 tampant(1,4)*0.3  483 307],...
                 'Name','Análisis de marea',...
                 'NumberTitle','off',...
                 'Color',[1 1 1]);
        menu1 = uimenu(figu0,'label','Acerca de...');
        menu1_2 = uimenu(menu1,'label','Implementación','Callback','TCam_V1C(''imple'')');
        menu1_3 = uimenu(menu1,'label','Referencias','Callback','TCam_V1C(''biblio'')');
        text1 = uicontrol(figu0,'style','text',...
                          'string',{'Análisis de mareas',...
                          'para el litoral del',...
                          'Estado de Campeche'},...
                          'Units','pixels',...
                          'Position',[64 143 351 90],...
                          'BackGround',[1 1 1],...
                          'FontName','Calibri',...
                          'FontWeight','bold',...
                          'FontSize',18,...
                          'HorizontalAlign','center');
        text2 = uicontrol(figu0,'style','text',...
                          'string',{'UAC'},...
                          'Units','pixels',...
                          'Position',[19 57 57 20],...
                          'BackGround',[1 1 1],...
                          'FontName','Calibri',...
                          'FontWeight','bold',...
                          'FontSize',14,...
                          'HorizontalAlign','center');        
        text2 = uicontrol(figu0,'style','text',...
                          'string',{'EPOMEX'},...
                          'Units','pixels',...
                          'Position',[400 57 69 20],...
                          'BackGround',[1 1 1],...
                          'FontName','Calibri',...
                          'FontWeight','bold',...
                          'FontSize',14,...
                          'HorizontalAlign','center');
        boton1 = uicontrol(figu0,'style','pushbutton',...
                          'string','Continuar',...
                          'Units','pixels',...
                          'Position',[203 18 92 34],...
                          'BackGround',[0.82 0.82 0.78],...
                          'FontName','Ms Sans Serif',...
                          'FontSize',8,...
                          'Callback','TCam_V1C(''follow'')');
                   
elseif strcmp(instruccion,'imple') 
            texto2 = {'El análisis de marea ha sido implementado por el personal',...
                      'del área de Procesos Costeros de EPOMEX.',...
                      '',...
                      'Responsables del proyecto:',...
                      'Dr. Gregorio Posada Vanegas.',...
                      'Dr. Gabriel Ruiz Martinez.',...
                      'M. en I. Beatriz Edith Vega Serratos.',...
                      '',...
                      'Técnicos acádemicos:',...
                      'M. en M.C. Juan Carlos Nava.',...
                      '',...
                      'T_tide fue desarrollado por Pawlowicz, R. et al.',...
                      '(2002) y es utilizado bajo términos GNU. Ha sido',...
                      'implementado para su uso en UAC-EPOMEX.',...
                      '',...
                      'A su vez, el área de Procesos Costeros, le agradece a la Secretaría de',...
                      'Marina-Armada de México, la VII zona naval, su colaboración en la',...
                      'protección del equipo y extracción del mismo, para recopilación de',...
                      'los datos.',...
                      '',...
                      'La interpretación y uso derivados de los resultados',...
                      'obtenidos, dependerán de la experiencia y conocimiento',...
                      'del usuario.',...
                      '',...
                      'Programó: Gabriel Ruiz.',...
                      'Versión: PredicT_TideV3_5',...
                      'Fecha: 15/oct/2010',...
                      '',...
                      ''};
%                       'Los responsables agradecen el apoyo, así como el permiso de',...
%                       'uso de las rutinas de análisis espectral del Dr. Ismael Mariño',...
%                       'Tapia, del CINVESTAV, Mérida.',...
%                       '',...
            msgbox(texto2,'Análisis de mareas-Implementación.','help');
            
elseif strcmp(instruccion,'biblio') 
            texto3 = {'Pawlowicz,R., Beardsley,B. y Lentz,S. 2002.',...
                      'Classical tidal harmonic analysis including error',...
                      'estimates in MATLAB using T_TIDE. Computers &',...
                      'Geosciences, 28: 929-937p.',...
                      '',...
                      ''};
            msgbox(texto3,'Análisis de mareas','help');  
            
elseif strcmp(instruccion,'follow') 
            % Cerrando la ventana anterior
            close(figu0);
        
            % Borrando el handle de la ventana anterior
            clear figu0;
            
            figu = figure;
            set(figu,'Units','pixels',...
                    'Menubar','none',...
                    'Resize','off',...
                    'Position',[tampant(1,3)*.25 tampant(1,4)*0.28 558 420],...
                    'Name','Inputs para ejecutar el T_Tide',...
                    'NumberTitle','off',...
                    'Color',[1 1 1]);
            text1 = uicontrol(figu,'style','text',...
                                'String','Parámetros necesarios para ejecutar el T_Tide',...
                                'Units','pixels',...
                                'Position',[110 386 335 23],...
                                'BackGround',[1 1 1],...
                                'FontName','Calibri',...
                                'FontWeight','bold',...
                                'FontSize',12);
            panel1 = uipanel('Title','ID del Sensor:',...
                                'Units','pixels',...
                                'Position',[16 206 184 164],...
                                'BackGround',[1 1 1],...
                                'Foreground',[0.08 0.17 0.55],...
                                'FontName','Ms Sans Serif',...
                                'FontWeight','bold',...
                                'FontSize',8);
            list1 = uicontrol(figu,'style','listbox',...
                                'string',{'a. API Campeche',...
                                            'b. Celestún',...
                                            'c. Champotón',...
                                            'd. Ciudad del Carmen',...
                                            'e. Isla Aguada',...
                                            'f. Isla Arena',...
                                            'g. Lerma',...
                                            'h. Nuevo Campechito',...
                                            'i. Sabancuy',...
                                            'j. Remate',...
                                            'k. Progreso',...
                                            'l. Cabo Catoche',...
                                            'm. Otro sitio'},...
                                'Units','pixels',...
                                'Position',[23 234 169 104],...
                                'BackGround',[1 1 1],...
                                'FontName','MS Sans Serif',...
                                'FontWeight','normal',...
                                'FontSize',8);        
            panel2 = uipanel('Title','Intervalo de predicción:',...
                                'Units','pixels',...
                                'Position',[18 66 183 125],...
                                'BackGround',[1 1 1],...
                                'Foreground',[0.08 0.17 0.55],...
                                'FontName','Ms Sans Serif',...
                                'FontWeight','bold',...
                                'FontSize',8);
            textp2_1 = uicontrol(panel2,'style','text',...
                                'string','Hasta el día:',...
                                'Units','pixels',...
                                'Position',[24 53 68 14],...
                                'Enable','off',...
                                'BackGround',[1 1 1],...
                                'FontName','Ms Sans Serif',...
                                'FontSize',8);                            
            editp2_1 = uicontrol(panel2,'style','edit',...
                                'string','',...
                                'Units','pixels',...
                                'Position',[99 48 50 22],...
                                'Enable','off',...
                                'BackGround',[1 1 1],...
                                'FontName','Ms Sans Serif',...
                                'FontSize',8);    
            boton0 = uicontrol(panel2,'style','pushbutton',...
                                'string','?',...
                                'Units','pixels',...
                                'Position',[155 48 20 22],...
                                'BackGround',[0.82 0.82 0.78],...
                                'FontName','Ms Sans Serif',...
                                'FontSize',8,...
                                'Enable','off',...
                                'Callback','TCam_V1C(''help1'')');
            rbp2_1 = uicontrol(panel2,'style','radiobutton',...
                                'string','Prediccion hasta cierto día:',...
                                'Units','pixels',...
                                'Position',[12 78 162 23],...
                                'BackGround',[1 1 1],...
                                'FontName','Ms Sans Serif',...
                                'FontSize',8,...
                                'Callback','TCam_V1C(''radio2_1'')');                  
            rbp2_2 = uicontrol(panel2,'style','radiobutton',...
                                'string','Predicción anual.',...
                                'Units','pixels',...
                                'Position',[12 17 123 23],...
                                'BackGround',[1 1 1],...
                                'FontName','Ms Sans Serif',...
                                'FontSize',8,...
                                'Callback','TCam_V1C(''radio2_2'')');
            panel3 = uipanel('Title','Nivel de referencia:',...
                                'Units','pixels',...
                                'Position',[211 295 340 74],...
                                'BackGround',[1 1 1],...
                                'Foreground',[0.08 0.17 0.55],...
                                'FontName','Ms Sans Serif',...
                                'FontWeight','bold',...
                                'FontSize',8);
            list2 = uicontrol(figu,'style','listbox',...
                            'string',{'1. Media del registro.',...
                                      '2. Proporcionar el valor.',...
                                      '3. Ninguno.',...
                                      '4. A partir del error relativo.',...
                                      '5. Quitando la tendencia lineal'},...
                            'Units','pixels',...
                            'Position',[220 309 175 33],...
                            'BackGround',[1 1 1],...
                            'FontName','MS Sans Serif',...
                            'FontWeight','normal',...
                            'FontSize',8,...
                            'Callback','TCam_V1C(''lis2'')');
            textp3_1 = uicontrol(panel3,'style','text',...
                                'string','Nivel, en m:',...
                                'Units','pixels',...
                                'Position',[195 22 68 14],...
                                'Enable','off',...
                                'BackGround',[1 1 1],...
                                'FontName','Ms Sans Serif',...
                                'FontSize',8);                            
            editp3_1 = uicontrol(panel3,'style','edit',...
                                'string','',...
                                'Units','pixels',...
                                'Position',[270 18 50 22],...
                                'Enable','off',...
                                'BackGround',[1 1 1],...
                                'FontName','Ms Sans Serif',...
                                'FontSize',8);             
            panel4 = uipanel('Title','Número de componentes a considerar:',...
                            'Units','pixels',...
                            'Position',[211 206 340 77],...
                            'BackGround',[1 1 1],...
                            'Foreground',[0.08 0.17 0.55],...
                            'FontName','Ms Sans Serif',...
                            'FontWeight','bold',...
                            'FontSize',8);
            rbp4_1 = uicontrol(panel4,'style','radiobutton',...
                            'string','Todas las componentes que considera el T_Tide.',...
                            'Units','pixels',...
                            'Position',[17 34 271 23],...
                            'BackGround',[1 1 1],...
                            'FontName','Ms Sans Serif',...
                            'FontSize',8,...
                            'Callback','TCam_V1C(''rbp4_1'')'); 
            rbp4_2 = uicontrol(panel4,'style','radiobutton',...
                            'string','Principales componentes que considera el T_Tide.',...
                            'Units','pixels',...
                            'Position',[17 7 276 23],...
                            'BackGround',[1 1 1],...
                            'FontName','Ms Sans Serif',...
                            'FontSize',8,...
                            'Callback','TCam_V1C(''rbp4_2'')');
            panel5 = uipanel('Title','Generacion de archivo de salida:',...
                            'Units','pixels',...
                            'Position',[211 66 340 125],...
                            'BackGround',[1 1 1],...
                            'Foreground',[0.08 0.17 0.55],...
                            'FontName','Ms Sans Serif',...
                            'FontWeight','bold',...
                            'FontSize',8);
            rbp5_1 = uicontrol(panel5,'style','radiobutton',...
                            'string','No.',...
                            'Units','pixels',...
                            'Position',[14 83 39 23],...
                            'BackGround',[1 1 1],...
                            'FontName','Ms Sans Serif',...
                            'FontSize',8,...
                            'Callback','TCam_V1C(''rbp5_1'')');
            rbp5_2 = uicontrol(panel5,'style','radiobutton',...
                            'string','Si y guardar en un archivo *.txt.',...
                            'Units','pixels',...
                            'Position',[14 60 300 23],...
                            'BackGround',[1 1 1],...
                            'FontName','Ms Sans Serif',...
                            'FontSize',8,...
                            'Callback','TCam_V1C(''rbp5_2'')');
            rbp5_3 = uicontrol(panel5,'style','radiobutton',...
                            'string','Solo los datos de las elevaciones y en un archivo *.txt.',...
                            'Units','pixels',...
                            'Position',[14 37 300 23],...
                            'BackGround',[1 1 1],...
                            'FontName','Ms Sans Serif',...
                            'FontSize',8,...
                            'Callback','TCam_V1C(''rbp5_3'')');
            rbp5_4 = uicontrol(panel5,'style','radiobutton',...
                            'string','Guardar en un archivo binario del tipo *.mat',...
                            'Units','pixels',...
                            'Position',[14 14 300 23],...
                            'BackGround',[1 1 1],...
                            'FontName','Ms Sans Serif',...
                            'FontSize',8,...
                            'Callback','TCam_V1C(''rbp5_4'')');   
            boton1 = uicontrol(figu,'style','pushbutton',...
                            'string','Continuar',...
                                'Units','pixels',...
                            'Position',[147 19 111 27],...
                            'BackGround',[0.82 0.82 0.78],...
                            'FontName','Ms Sans Serif',...
                            'FontSize',8,...
                            'Callback','TCam_V1C(''review'')');
            boton2 = uicontrol(figu,'style','pushbutton',...
                            'string','Cancelar',...
                            'Units','pixels',...
                            'Position',[279 19 115 27],...
                            'BackGround',[0.82 0.82 0.78],...
                            'FontName','Ms Sans Serif',...
                            'FontSize',8,...
                            'Callback','TCam_V1C(''salir'')');
       
elseif strcmp(instruccion,'radio2_1')
            set(editp2_1,'Enable','on');
            set(textp2_1,'Enable','on');
            set(boton0,'Enable','on');
            set(rbp2_2,'Value',0);

elseif strcmp(instruccion,'radio2_2')
            set(editp2_1,'Enable','off');
            set(textp2_1,'Enable','off');
            set(boton0,'Enable','off');
            set(rbp2_1,'Value',0);
            
elseif strcmp(instruccion,'lis2')
            if get(list2,'Value') == 2
                 set(textp3_1,'Enable','on');
                 set(editp3_1,'Enable','on');
            else
                 set(textp3_1,'Enable','off');
                 set(editp3_1,'Enable','off'); 
            end
             
elseif strcmp(instruccion,'rbp4_1')
            set(rbp4_2,'Value',0);

elseif strcmp(instruccion,'rbp4_2')
            set(rbp4_1,'Value',0);
            
elseif strcmp(instruccion,'rbp5_1')
            set(rbp5_2,'Value',0);            
            set(rbp5_3,'Value',0);
            set(rbp5_4,'Value',0);
            
elseif strcmp(instruccion,'rbp5_2')
            set(rbp5_1,'Value',0);            
            set(rbp5_3,'Value',0);
            set(rbp5_4,'Value',0); 
            
elseif strcmp(instruccion,'rbp5_3')
            set(rbp5_1,'Value',0);            
            set(rbp5_2,'Value',0);
            set(rbp5_4,'Value',0); 
            
elseif strcmp(instruccion,'rbp5_4')
            set(rbp5_1,'Value',0);            
            set(rbp5_2,'Value',0);
            set(rbp5_3,'Value',0);            

elseif strcmp(instruccion,'help1')
            texto = {'El número de día que debe ingresarse en el cuadro de',...
                     'edición de texto será el correspondiente hasta el día del año',...
                     'que se desea la pronóstico. Por ejemplo, si desearás ejecutar',...
                     'hasta el día 5 de Mar, ingresarías el valor de 64. Es decir,',...
                     '   31 dias de Ene',...
                     '+ 28 dias de Feb',...
                     '     5 dias de Mar',...
                     '---------------------------',...
                     '      64 dias ',...
                     '',...
                     'Cuando el número de día sea 0, el análisis se hará solamente',...
                     'para las fechas correspondientes al registro'};
            msgbox(texto,'Nota','help');
            
elseif strcmp(instruccion,'salir')                        
            % Cerrando la ventana anterior
            close(figu);
        
            % Borrando el handle de la ventana anterior
            clear figu;
            
elseif strcmp(instruccion,'review')            
            % Revisando que no esten apagados todos los radio button
            if  get(rbp2_1,'Value') == 0 && get(rbp2_2,'Value') == 0
                           msgbox('Faltó definir el parámetro del intervalo del registro!!!','Error...','error');
            elseif get(rbp4_1,'Value') == 0 && get(rbp4_2,'Value') == 0 
                           msgbox('Faltó definir el parámetro de las  componentes!!!','Error...','error');
            elseif get(rbp5_1,'Value') == 0 && get(rbp5_2,'Value') == 0 && get(rbp5_3,'Value') == 0 ...
                       && get(rbp5_4,'Value') == 0
                           msgbox('Faltó definir el parámetro de salida!!!','Error...','error');
            elseif get(rbp2_1,'Value') == 1 && isempty(get(editp2_1,'string')) 
                           msgbox('Faltó especificar el día, en el intervalo del registro!!!','Error...','error');
            elseif get(rbp2_1,'Value') == 1 && (str2num(get(editp2_1,'string')) <-1 || str2num(get(editp2_1,'string')) > 365)
                           msgbox('Día fuera de rango!!!','Error...','error');
            elseif get(list2,'Value') == 2 && isempty(get(editp3_1,'string'))
                           msgbox('Faltó especificar nivel de referencia!!!','Error...','error');
            else
                   % Intercambiando los valores de las variables que se
                   % necesitan para poder cerrar la ventana
                   glist1 = get(list1,'Value');
                   rbp2_2 = get(rbp2_2,'Value');
                   editp2_1 = str2num(get(editp2_1,'string'));
                   elec = get(list2,'Value');
                   editp3_1 = str2num(get(editp3_1,'string'));
                   hrbp4_1 = get(rbp4_1,'Value');
                   hrbp4_2 = get(rbp4_2,'Value');
                   hrbp5_1 = get(rbp5_1,'Value');
                   hrbp5_2 = get(rbp5_2,'Value');
                   hrbp5_3 = get(rbp5_3,'Value');
                   hrbp5_4 = get(rbp5_4,'Value');
                                      
                   % Cerrando la ventana anterior
                   close(figu);
        
                   % Borrando el handle de la ventana anterior
                   clear figu;
            
                   % Continuando
                   TCam_V1C('windo2'); 
            end
            
elseif strcmp(instruccion,'windo2')
            colores = [1 1 0.85 ]; colortexto = [0.50 0.25 0.25];
            FigureStart = figure('Menubar','none',...
                             'Numbertitle','off',...
                             'Name','Datos:',...
                             'Units','pixels',...
                             'Position',[tampant(1,3)*.40 tampant(1,4)*0.45 250 100] , ...
                             'ReSize','off',...
                             'Color',colores );
            uicontrol(FigureStart,'Style','Text',...
                             'BackGroundColor',colores,...
                             'String','El ingreso de datos es:?',...
                             'Units','pixels',...
                             'Position',[20 733-660 168 20],...
                             'FontWeight','bold');
            ele1 = uicontrol(FigureStart,'Style','checkbox',...
                             'String','Cargando archivo *.mat',...
                             'Units','pixels',...
                             'Position',[32 733-683 150 20],...
                             'BackGroundColor',colores,...
                             'ForeGroundColor',colortexto,...
                             'FontWeight','bold',...
                             'Callback','TCam_V1C(''ttide'')');
                    
elseif strcmp(instruccion,'ttide')
      % Cerrando la ventana anterior
      close(FigureStart);
        
      clear ele1 FigureStart; 
      
      % Borrando todas las variables globales relacionadas a los handles
      clear global boton0 figu figu0 list1 list2 rbp2_1 rbp4_1 rbp4_2
      clear global rbp5_1 rbp5_2 rbp5_3 rbp5_4 textp2_1

      % Abriendo ventana para seleccionar el archivo que contiene los datos
      [Archivo,Route] = uigetfile('*.mat','Los datos del registro se encuentran en:');
        
      if Archivo ~= 0                 
           % Obteniendo la ruta donde se encuentra PredicT_Tide
           ruta = pwd;
        
           % Construyendo la ruta de acceso del archivo donde se encuentra PredicT_Tide
           filedatos = fullfile(Route,Archivo);
           
           % Inicializando variables de datos se guardaran los datos que necesita el T_Tide
           cargah = 0;
           fechas = 0;

           % Cargando los datos del archivo mat
           load('-mat', filedatos);
                     
           % Tomando la primer letra.
           latask = glist1;
           
           switch latask
                  case 1
                        lati = 19.8635204;
                        sitio = 'API-Campeche';
                  case 2    
                        lati = 20.92443;
                        sitio = 'Celestún';
                  case 3    
                        lati = 19.359169;
                        sitio = 'Champotón';
                  case 4    
                        lati = 18.629911;
                        sitio = 'Ciudad del Carmen';
                  case 5    
                        lati = 20.69417;
                        sitio = 'Isla Aguada';
                  case 6    
                        lati = 20.69833;
                        sitio = 'Isla Arena';
                  case 7
                        lati = 19.8154194;
                        sitio = 'Lerma';
                  case 8
                        lati = 18.64545;
                        sitio = 'Nvo. Campechito';
                  case 9
                        lati = 18.9779;
                        sitio = 'Sabancuy';
                  case 10
                        lati = 20.5;
                        sitio = 'Remate';
                  case 11
                        lati = 21.28;
                        sitio = 'Progreso';
                  case 12
                        lati = 21.67963;
                        sitio = 'Cabo Catoche';
                  case 13
                        lati = input('Cuál es la latitud (grados decimales) correspondiente a los registros (XX.XXXXXXX)? ');
                        sitio = input(horzcat('Nombre del sitio? (',char(39),'nombre',char(39),'):'));
           end
           
           % Revisando si existe en folder donde se guardaran los resultados, si no
           % existe el folder, lo crea.
           nameresul = 'Resultados_Analisis';   % Nombre de la carpeta donde se guardaran los resultados
           folderres = exist(nameresul, 'dir');
           if folderres == 0
              mkdir(nameresul);
           end
           
           % Determinando la ruta donde se moveran los archivos de salida una vez creados
           moarchi = horzcat(pwd,'\',nameresul); 
           if hrbp4_1 == 1
                  synt = 7;
           elseif hrbp4_2 == 1
                  synt = 8;
           end
           
           % Asignando el numero de componentes a una variable
           if synt == 7
                syn = 0;
           elseif synt == 8
               syn = 1;
           else
                syn = 1;
           end
           
           % Construyendo los archivos de salida de las componentes de la marea del  T_tide
           outputfileTtide = horzcat('CompoMarea_',Archivo(1:1:end-4));
           outputTtide = horzcat(outputfileTtide,'.txt');
           
           % Subfuncion que genera el archivo que se utiliza para el pronostico
           [timereg,regis,regis0,fechas,cargah,yearpres,a1] = generatordate(fechas,cargah,rbp2_2,editp2_1);
          
           % Quitando tendencia lineal
           %cargah = detrend(cargah,0);
           
           % Ejecutando T_Tide
           [varmarea,prono]=t_tide(cargah,...
                                'interval',timereg,...
                                'start',fechas(1),...
                                'latitude',lati,...
                                'secular','mean',...
                                'rayleigh',1,...
                                'error','cboot',...                 
                                'synthesis',syn,...             
                                'output',outputfileTtide);
                    
           % Para el analisis de la amplitud (estas lineas viene en el xtide)
           % Identificando la frecuencias significativas
           Frecuencia = varmarea.tidecon(:,1);
           Amplitud = varmarea.tidecon(:,2);
           % Identificando picos
           fsig = Frecuencia > Amplitud; 
           AmpNoSigX = [varmarea.freq(~fsig),varmarea.freq(~fsig)]';
           AmpNoSigY = [.0005*ones(sum(~fsig),1),varmarea.tidecon(~fsig,1)]';
           AmpSigX = [varmarea.freq(fsig),varmarea.freq(fsig)]';
           AmpSigY = [.0005*ones(sum(fsig),1),varmarea.tidecon(fsig,1)]';
           EtiComp = varmarea.name;
           
           % Funcion que me calcula corrige el nivel de la marea
           [niv] = niveles(elec,cargah,regis0,prono);

           % Guardando en variable los valores de carga del sensor
           yreg = cargah(1:1:regis0);

           % Guardando en variable los valores del registro menos los valores que se calcularon con la predicción
           % (señal residual)
           yresi = cargah(1:1:regis0) - prono(1:1:regis0);

           % Guardando en variable para graficación los valores del registro y la predicción
           yregprono = prono(1:1:regis0) + niv;

           % Guardando en variable para graficación de la predicción anual
           yprono = prono + niv;
           
           % Calculando el espectro de la señal original y la resiudal
           [F,Pxr,Pxs] = espectroT_tide(yreg,yresi);

           % mueve el archivo 
           movefile(outputfileTtide,outputTtide); 

           % Obteniendo los días del año que se graficaran para mostrar el registro anual
           xanual = fechas - datenum(yearpres,1,1,0,0,0);

           % Obteniendo los dias del año que se graficaran para mostrar los registros medidos
           xreg = fechas(1:1:regis0) - datenum(yearpres,1,1,0,0,0);

           % Determinando el nos. de linea que serviran para los ticks de las graficas
           % el numerador de la fracción representa en no. de etiquetas en el eje
           % Para registro
           lineticksreg = (1:floor(length(xreg)/10):length(fechas(1:1:regis0)))';
           etiticksreg = zeros(length(lineticksreg),6);
           % Anual
           lineticksA = (1:floor(length(xanual)/10):length(fechas(1:1:regis)))';
           etiticksA = zeros(length(lineticksA),6);

           % Determinando la fecha correspondiente a los nos. de lineas de los ticks,
           % convirtiéndolos de no. serial a fecha gregoriana y dando formato a
           % dicha fecha
           % Para graficas de registro
           for lt = 1 : length(lineticksreg)
              lineticks2(lt,1) = fechas(lineticksreg(lt,1),1);
              lineticks3(lt,1) = xreg(lineticksreg(lt,1),1);
              etiticksreg(lt,:) = datevec(lineticks2(lt,1));
              tempfecha = [etiticksreg(lt,1), etiticksreg(lt,2), etiticksreg(lt,3), ...
                           etiticksreg(lt,4), etiticksreg(lt,5), etiticksreg(lt,6)];
              lticks(lt,:) = datestr(tempfecha, 'dd/mm/yyyy  HH:MM');
           end

           % Para la grafica anual
           for lt = 1 : length(lineticksA)
              lineticks4(lt,1) = fechas(lineticksA(lt,1),1);
              lineticks5(lt,1) = xanual(lineticksA(lt,1),1);
              etiticksA(lt,:) = datevec(lineticks4(lt,1));
              tempfechaA = [etiticksA(lt,1), etiticksA(lt,2), etiticksA(lt,3), ...
                            etiticksA(lt,4), etiticksA(lt,5), etiticksA(lt,6)];
              lticksA(lt,:) = datestr(tempfechaA, 'dd/mm/yyyy HH:MM');
           end
           
           % Reporte en pantalla
           fprintf('   Intervalo de tiempo entre datos registrados: %3.0f minutos. \n',a1(1,5));
           if elec == 1
                  fprintf('   Nivel de referencia (media del registro): %5.2f metros. \n',niv);
           elseif elec == 2
                  fprintf('   Nivel de referencia (proporcionado por usuario): %5.2f metros. \n',niv);
           elseif elec == 3
                  fprintf('   No se asoció ningún nivel de referencia. \n');
           else
                  fprintf('   Nivel de referencia (por error relativo): %5.2f metros. \n',niv);
           end
           fprintf('   Valores máximos:\n');
           fprintf('      Registro: \n');
           fprintf('         Pleamar máxima: %5.2f metros. \n', max(yreg));
           fprintf('         Bajamar máxima: %5.2f metros. \n', min(yreg));
           fprintf('         Amplitud de marea máxima: %5.2f metros. \n', max(yreg)-min(yreg));
           fprintf('      Pronóstico: \n');
           fprintf('         Pleamar máxima: %5.2f metros. \n', max(yprono));
           fprintf('         Bajamar máxima: %5.2f metros. \n', min(yprono));
           fprintf('         Amplitud de marea máxima: %5.2f metros. \n', max(yprono)-min(yprono));
           fprintf('\n');
           fprintf('********************************************************** \n');
           
           % Verificando que el pronostico sea coherente, si no lo es
           % aborta la ejecución
           if max(yprono) > 5
              fprintf('\nEl pronostico esta fuera de rango ! \n');
              fprintf('Se aborta la ejecucion del programa !!! \n');
              return; 
           end
           
           % funcion que me identifica las tormentas
           %[idtor] = tormentas(fechas,cargah,regis0,prono);
           
           % % _______________________ Escribiendo el archivo de Salida __________________________
           if hrbp5_2 == 1
                  resfile = 13;
           elseif hrbp5_3 == 1
                  resfile = 14;
           elseif hrbp5_4 == 1
                  resfile = 15;
           else  
                  resfile = 16;
           end

           % Mandando los datos del reporte  estadistico a archivo
           Estad = horzcat('Estadistica_',Archivo(1:1:length(Archivo)-4));
           estadi = horzcat(Estad,'.txt');
           fid0 = fopen(estadi,'w');
           
           % Reporte estadistico
           fprintf(fid0,'Intervalo de tiempo entre datos registrados: %3.0f minutos. \n',a1(1,5));
           if elec == 1
                  fprintf(fid0,'Nivel de referencia (media del registro): %5.2f metros. \r\n',niv);
           elseif elec == 2
                  fprintf(fid0,'Nivel de referencia (proporcionado por usuario): %5.2f metros. \r\n',niv);
           elseif elec == 3
                  fprintf(fid0,'No se asoció ningún nivel de referencia. \r\n');
           else
                  fprintf(fid0,'Nivel de referencia (por error relativo): %5.2f metros. \r\n',niv);
           end
           fprintf(fid0,'Valores máximos:\r\n');
           fprintf(fid0,'Registro: \r\n');
           fprintf(fid0,'Pleamar máxima: %5.2f metros. \r\n', max(yreg));
           fprintf(fid0,'Bajamar máxima: %5.2f metros. \r\n', min(yreg));
           fprintf(fid0,'Amplitud de marea máxima: %5.2f metros. \r\n', max(yreg)-min(yreg));
           fprintf(fid0,'Pronóstico: \n');
           fprintf(fid0,'Pleamar máxima: %5.2f metros. \r\n', max(yprono));
           fprintf(fid0,'Bajamar máxima: %5.2f metros. \r\n', min(yprono));
           fprintf(fid0,'Amplitud de marea máxima: %5.2f metros. \r\n', max(yprono)-min(yprono));
           fclose('all');
           % Moviendo los archivos de resultados
           movefile(estadi,moarchi);
           
           if resfile == 13
                  % Mandando los datos del pronostico a archivo
                  PronoMarea = horzcat('Marea_',Archivo(1:1:length(Archivo)-4));
                  marea = horzcat(PronoMarea,'.txt');

                  % Abriendo el archivo donde se guardaran los datos del Pronostico
                  fid2 = fopen(marea,'w');
                  fprintf(fid2, '#\t #_serial\t fecha\t hora\t eta(m)\t \r\n');

                  for con = 1:length(yprono)
                     cal = datevec(fechas(con,1));
                     cal(1,6) = round(cal(1,6));
%                      if cal(1,6) == 60
%                         cal(1,5) = cal(1,5)+(cal(1,6)/60);
%                         cal(1,6) = 0;
%                      end 
                     if cal(1,6) >= 30
                          cal(1,5) = cal(1,5)+1;
                          cal(1,6) = 0;
                     else 
                          cal(1,6) = 0; 
                     end
                     dias = horzcat(num2str(cal(1,3)),'/',num2str(cal(1,2)),'/',num2str(cal(1,1)));
                     horas = horzcat(num2str(cal(1,4)),':',num2str(cal(1,5)),':',num2str(cal(1,6)));
                     fprintf(fid2, '%10.0f\t %18.9f\t %9s\t %8s\t%6.2f \r\n',con, fechas(con,1), dias, horas, yprono(con,1));           
                  end

%                   fprintf('El registro de los eventos meteorológicos se han enviado al archivo EvenMeteExt.txt \n');
%                   fprintf('\n');
% 
%                   fid3 = fopen('EvenMeteExt.txt','w');
%                   fprintf(fid3, '#\t Inicio\t Termino\t \n');
% 
%                   for con2 = 1:length(idtor)
%                      fprintf(fid3, '%4.0f\t %19s\t %19s\t \n',con2, idtor{con2,1}, idtor{con2,2});           
%                   end
                  fprintf('********** G. Escribiendo archivo de salida ************* \n');
                  fprintf('Los valores de la predicción de la marea se han enviado al archivo .txt \n');
                  % Cerrando el archivos
                  fclose('all'); 
                  
                  % Moviendo los archivos de resultados
                  movefile(marea,moarchi);
                  movefile(outputTtide,moarchi);
           elseif resfile == 14
                  % Mandando los datos del pronostico a archivo que se necesitará
                  % para el correr el hidrodinamico y calidad
                  PronoMarea = horzcat('Marea_',Archivo(1:1:length(Archivo)-4));
                  marea = horzcat(PronoMarea,'.txt');
                  PronoMarea2 = horzcat('Sresidual_',Archivo(1:1:length(Archivo)-4));
                  marea2 = horzcat(PronoMarea2,'.txt');

                  % Abriendo el archivo donde se guardaran los datos del Pronostico
                  fid2 = fopen(marea,'w');
                  fid3 = fopen(marea2,'w');
                  fprintf(fid2, '%4.0f \n',300);
                  fprintf(fid3, '%4.0f \n',300);
 
                  for con = 1:length(yprono)
                     fprintf(fid2,'%6.2f \r\n',yprono(con,1));  
                     fprintf(fid3,'%6.2f \r\n',yresi(con,1)); 
                  end
        
                  fprintf('Los valores de la predicción de la marea se han enviado al archivo .txt \n');
        
                  % Cerrando el archivos
                  fclose('all');
        
                  % Moviendo los archivos de resultados
                  movefile(marea,moarchi);
                  movefile(marea2,moarchi);
                  movefile(outputTtide,moarchi);
           elseif resfile == 15
                  % Guardando los datos de la marea que se pronostico
                  PronoMarea = horzcat('Marea_',Archivo(1:1:length(Archivo)-4));
                  marea = horzcat(PronoMarea,'.mat');
                  save(marea,'fechas','yprono','-mat');
                  
                  % Guardando los datos de la señal residual
                  PronoMareaR = horzcat('Sresidual_',Archivo(1:1:length(Archivo)-4));
                  marea2 = horzcat(PronoMareaR,'.mat');
                  fecharesi = fechas;
                  save(marea2,'fecharesi','yresi','-mat');
                  
                  % Cerrando el archivos
                  fclose('all');
 
                  % Moviendo los archivos de resultados
                  movefile(marea,moarchi);
                  movefile(marea2,moarchi);
                  movefile(outputTtide,moarchi);
           else
                  % Cerrando el archivos
                  fclose('all');
 
                  % Moviendo los archivos de resultados
                  movefile(outputTtide,moarchi);
           end
           % % movefile('EvenMeteExt.txt',moarchi);   % Activar cuando se determinen las tormentas
           
%            TCam_V1C('graficas');
%            
% elseif strcmp(instruccion,'graficas')
%             figu2 = figure;
%             set(figu2,'Units','pixels',...
%                     'Menubar','none',...
%                     'Resize','off',...
%                     'Position',[10 10 549 519],...
%                     'Name','Inputs para ejecutar el T_Tide',...
%                     'NumberTitle','off',...
%                     'Color',[1 1 1]);
%             textg1 = uicontrol(figu2,'style','text',...
%                                  'String','Gráficas',...
%                                  'Units','pixels',...
%                                  'Position',[93,467,363,31],...
%                                  'BackGround',[1 1 1],...
%                                  'FontName','Century',...
%                                  'FontWeight','bold',...
%                                  'FontSize',20);
%             panelg1 = uipanel('Title','Gráficas del tipo XY:',...
%                                 'Units','pixels',...
%                                 'Position',[65 217 418 239],...
%                                 'BackGround',[1 1 1],...
%                                 'Foreground',[0.08 0.17 0.55],...
%                                 'FontName','Ms Sans Serif',...
%                                 'FontWeight','bold',...
%                                 'FontSize',10);
%             botong0 = uicontrol(panelg1,'style','pushbutton',...
%                                 'String','Señal de marea (Registro vs Pronóstico)',...
%                                 'Units','pixels',...
%                                 'Position',[128 407 301 23],...
%                                 'BackGround',[0.82 0.82 0.78],...
%                                 'FontName','Ms Sans Serif',...
%                                 'FontSize',8,...
%                                 'Callback','TCam_V1C(''help1'')');                
%             botong2 = uicontrol(panelg1,'style','pushbutton',...
%                                 'String','Pronóstico de marea correspondiente al periodo de registro',...
%                                 'Units','pixels',...
%                                 'Position',[123 374 312 23],...
%                                 'BackGround',[0.82 0.82 0.78],...
%                                 'FontName','Ms Sans Serif',...
%                                 'FontSize',8,...
%                                 'Callback','TCam_V1C(''help1'')'); 
%             botong3 = uicontrol(panelg1,'style','pushbutton',...
%                                 'String','Pronóstico anual de marea',...
%                                 'Units','pixels',...
%                                 'Position',[129 340 301 23],...
%                                 'BackGround',[0.82 0.82 0.78],...
%                                 'FontName','Ms Sans Serif',...
%                                 'FontSize',8,...
%                                 'Callback','TCam_V1C(''help1'')');    
%             botong4 = uicontrol(panelg1,'style','pushbutton',...
%                                 'String','Análisis de la estimación de las amplitudes de la marea',...
%                                 'Units','pixels',...
%                                 'Position',[129 307 301 23],...
%                                 'BackGround',[0.82 0.82 0.78],...
%                                 'FontName','Ms Sans Serif',...
%                                 'FontSize',8,...
%                                 'Callback','TCam_V1C(''help1'')'); 
%             botong5 = uicontrol(panelg1,'style','pushbutton',...
%                                 'String','Análisis de la estimación de las fase de la marea',...
%                                 'Units','pixels',...
%                                 'Position',[130 273 301 23],...
%                                 'BackGround',[0.82 0.82 0.78],...
%                                 'FontName','Ms Sans Serif',...
%                                 'FontSize',8,...
%                                 'Callback','TCam_V1C(''help1'')');
% %             botong6 = uicontrol(panelg1,'style','pushbutton',...
% %                                 'String','',...
% %                                 'Units','pixels',...
% %                                 'Position',[130 241 301 23],...
% %                                 'BackGround',[0.82 0.82 0.78],...
% %                                 'FontName','Ms Sans Serif',...
% %                                 'FontSize',8,...
% %                                 'Enable','on',...
% %                                 'Callback','TCam_V1C(''help1'')');
%             panelg2 = uipanel('Title','Mapas de contornos:',...
%                                 'Units','pixels',...
%                                 'Position',[65 217 418 239],...
%                                 'BackGround',[1 1 1],...
%                                 'Foreground',[0.08 0.17 0.55],...
%                                 'FontName','Ms Sans Serif',...
%                                 'FontWeight','bold',...
%                                 'FontSize',10);
%             botong7 = uicontrol(panelg2,'style','pushbutton',...
%                                 'String','Pronóstico anual',...
%                                 'Units','pixels',...
%                                 'Position',[71 55 283 23],...
%                                 'BackGround',[0.82 0.82 0.78],...
%                                 'FontName','Ms Sans Serif',...
%                                 'FontSize',8,...
%                                 'Callback','TCam_V1C(''help1'')');
%             botong8 = uicontrol(panelg2,'style','pushbutton',...
%                                 'String','Graficar cada uno de los meses del pronóstico',...
%                                 'Units','pixels',...
%                                 'Position',[70 20 284 23],...
%                                 'BackGround',[0.82 0.82 0.78],...
%                                 'FontName','Ms Sans Serif',...
%                                 'FontSize',8,...
%                                 'Callback','TCam_V1C(''help1'')');
%             botong9 = uicontrol(figu,'style','pushbutton',...
%                             'string','Cancelar',...
%                             'Units','pixels',...
%                             'Position',[241 19 71 22],...
%                             'BackGround',[0.82 0.82 0.78],...
%                             'FontName','Ms Sans Serif',...
%                             'FontSize',8,...
%                             'Callback','TCam_V1C(''salir'')');                
           
           % % _________________________________________________________________________           

           % _______________________ Graficando __________________________________
           % Declarando las dimensiones de la ventana de las graficas
           Izq = 7;
           Fon = 37;
           ancho = (99.28*tampant(1,3))/100;
           alto = (89.0476*tampant(1,4))/100;
           
           fprintf('\n');
           fprintf('\n');
           fprintf('********** F. Graficando ************* \n');
           fprintf('\n');

           % Font principal de las graficas
           Tletra = 'Calibri';
           % Tamaño de la letra de las escalas de ejes
           Ntexejes = 11;
           % Tamaño de la letra del encabezado de los ejes
           NtexEtiXY = 16;
           % Tamaño de la letra del encabezado principal de la grafica
           Ntextit = 20;
           % Tamaño de la letra de los textos de legend
           Ntexleg = 12;

           % Grafica del pronostico de la marea (registro temporal)
           fprintf('Realizando la gráfica del pronóstico de marea correspondiente al periodo de registro "Hindcast". \n');
           figure;
           set(gcf,'Units','pixels',...
                    'Position',[Izq Fon ancho alto],...
                    'Name','Predicción de la marea en el periodo de registro',...
                    'NumberTitle','off',...
                    'Menubar','figure',...
                    'Color',[1 1 1]);
           plot(xreg,yregprono,...
                    'Color',[0.04 0.14 0.42],...
                    'LineWidth',2);
                %line(xanual,niv);
           set(gca,'XLim',[min(xreg) max(xreg)],...
                    'Color',[1 0.97 0.92],...
                    'YMinorTick','off',...
                    'XMinorTick','off',...
                    'XTickLabel',lticks,...
                    'XTick',lineticks3,...
                    'TickLength',[0.005;0.01],...
                    'XGrid','on',...
                    'YGrid','on',...
                    'GridLineStyle',':',...
                    'FontSize',Ntexejes,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           xlabel('Periodo de análisis',...
                    'FontSize',NtexEtiXY,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           ylabel('Elevación de la superficie del mar (m)',...
                    'FontSize',NtexEtiXY,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           title(horzcat('Pronóstico de marea correspondiente al periodo del registro "Hindcast" (',sitio,')'),...
                    'FontWeight','bold',...
                    'FontSize',Ntextit,...
                    'FontName',Tletra);

           % Grafica del registro de la marea y el pronostico
           fprintf('Realizando la gráfica de la señal de marea registrada. \n');
           figure;
           set(gcf,'Units','pixels',...
                    'Position',[Izq Fon ancho alto],...
                    'Name','Análisis de la marea, a partir de los datos registrados',...
                    'NumberTitle','off',...
                    'Menubar','figure',...
                    'Color',[1 1 1]);
           % Grafica de registro    
           plot(xreg,yreg,'b','LineWidth',2);
           hold on
           %Grafica de la prediccion
           plot(xreg,yregprono,'Color',[0.04 0.14 0.42],'Linewidth',2);
           hold off
           set(gca,'XLim',[min(xreg) max(xreg)],...
                    'Color',[1 0.97 0.92],...
                    'YMinorTick','off',...
                    'XMinorTick','off',...
                    'XTickLabel',lticks,...
                    'XTick',lineticks3,...
                    'TickLength',[0.005;0.01],...
                    'XGrid','on',...
                    'YGrid','on',...
                    'GridLineStyle',':',...
                    'FontSize',Ntexejes,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           xlabel('Periodo de análisis',...
                    'FontSize',NtexEtiXY,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           ylabel('Elevación de la superficie del mar (m)',...
                    'FontSize',NtexEtiXY,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           title(horzcat('Señal de marea (Registro vs Pronóstico) ','(',sitio,')'),...
                    'FontWeight','bold',...
                    'FontSize',Ntextit,...
                    'FontName',Tletra);
           le = legend('Señal de marea registrada','Señal de marea pronósticada');
           set(le, 'Box', 'off',...
                    'FontWeight','bold',...
                    'FontName',Tletra,...
                    'FontSize',Ntexleg);
    
           % Grafica del pronostico de la marea (registro anual)
           fprintf('Realizando la gráfica del pronóstico de marea correspondiente al periodo de pronóstico. \n');
           figure;
           set(gcf,'Units','pixels',...
                    'Position',[Izq Fon ancho alto],...
                    'Name','Predicción de la marea (periodo de pronóstico)',...
                    'NumberTitle','off',...
                    'Menubar','figure',...
                    'Color',[1 1 1]);
           plot(xanual,yprono,...
                    'Color',[0.04 0.14 0.42],...
                    'LineWidth',2);
           set(gca,'XLim',[min(xanual) max(xanual)],...
                    'Color',[1 0.97 0.92],...
                    'YMinorTick','off',...
                    'XMinorTick','off',...
                    'XTickLabel',lticksA,...
                    'XTick',lineticks5,...
                    'TickLength',[0.005;0.01],...
                    'XGrid','on',...
                    'YGrid','on',...
                    'GridLineStyle',':',...
                    'FontSize',Ntexejes,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           xlabel('Periodo de análisis',...
                    'FontSize',NtexEtiXY,...
                    'FontName',Tletra,...
                    'FontWeight','bold');
           ylabel('Elevación de la superficie del mar (m)',...
                    'FontSize',NtexEtiXY,...
                    'FontName',Tletra,...
                    'FontWeight','bold');
           title(horzcat('Pronóstico de marea ','(',sitio,')'),...
                    'FontWeight','bold',...
                    'FontSize',Ntextit,...
                    'FontName',Tletra); 
                
           % Grafica del pronostico de la marea (registro temporal)
           fprintf('Realizando la gráfica de la señal residual. \n');
           figure;
           set(gcf,'Units','pixels',...
                    'Position',[Izq Fon ancho alto],...
                    'Name','Señal residual',...
                    'NumberTitle','off',...
                    'Menubar','figure',...
                    'Color',[1 1 1]);
           plot(xreg,yresi,...
                    'Color',[0.04 0.14 0.42],...
                    'LineWidth',2);
                %line(xanual,niv);
           set(gca,'XLim',[min(xreg) max(xreg)],...
                    'Color',[1 0.97 0.92],...
                    'YMinorTick','off',...
                    'XMinorTick','off',...
                    'XTickLabel',lticks,...
                    'XTick',lineticks3,...
                    'TickLength',[0.005;0.01],...
                    'XGrid','on',...
                    'YGrid','on',...
                    'GridLineStyle',':',...
                    'FontSize',Ntexejes,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           xlabel('Periodo de análisis',...
                    'FontSize',NtexEtiXY,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           ylabel('Elevación de la superficie del mar (m)',...
                    'FontSize',NtexEtiXY,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           title(horzcat('Señal Residual de la marea (',sitio,')'),...
                    'FontWeight','bold',...
                    'FontSize',Ntextit,...
                    'FontName',Tletra);

           % Analisis de las amplitudes 
           fprintf('Realizando la gráfica de las amplitudes de las componentes de la marea. \n');
           figure;
           set(gcf,'Units','pixels',...
                    'Position',[Izq Fon ancho alto],...
                    'Name','Análisis de las amplitudes de las componentes de la marea',...
                    'NumberTitle','off',...
                    'Menubar','figure',...
                    'Color',[1 1 1]);
           semilogy(AmpNoSigX,AmpNoSigY,'.-r');
           line(AmpSigX,AmpSigY,...
                    'marker','.',...
                    'Color',[0.04 0.14 0.42]);
           line(varmarea.freq,Amplitud,'linestyle',':','color',[0 0.5 0]);
           set(gca,'Ylim',[0.0005 1],...
                    'Xlim',[0 0.5],...
                    'Color',[1 0.97 0.92],...
                    'TickLength',[0.005;0.01],...
                    'FontSize',Ntexejes,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           text(varmarea.freq,Frecuencia,EtiComp,'rotation',45,'vertical','base');
           xlabel('Frecuencia (cph)',...
                    'FontSize',NtexEtiXY,...
                    'FontName',Tletra,...
                    'FontWeight','bold');
           ylabel('Amplitud (m)',...
                    'FontSize',NtexEtiXY,...
                    'FontName',Tletra,...
                    'FontWeight','bold');
           text(0.27,0.4,'Amplitudes analizadas con un 95% de nivel de confianza',...
                    'FontWeight','bold',...
                    'FontName',Tletra,...
                    'FontSize',Ntexleg);
           text(0.30,0.2,'Componentes principales',...
                    'Color',[0.04 0.14 0.42],...
                    'FontWeight','bold',...
                    'FontName',Tletra,...
                    'FontSize',Ntexleg);
           text(0.30,0.1,'Componentes secundarias','color','r',...
                    'FontWeight','bold',...
                    'FontName',Tletra,...
                    'FontSize',Ntexleg);
           text(0.30,0.05,'Curva de representativa del nivel de confianza del 95%',...
                    'Color',[0 0.5 0],...
                    'FontWeight','bold',...
                    'FontName',Tletra,...
                    'FontSize',Ntexleg);
           title(horzcat('Análisis de la estimación de las amplitudes de la marea ','(',sitio,')'),...
                    'FontWeight','bold',...
                    'FontSize',Ntextit,...
                    'FontName',Tletra); 
   
           % Analisis de la fase
           fprintf('Realizando la gráfica de las fases de las componentes de la marea. \n');
           figure;
           set(gcf,'Units','pixels',...
                    'Position',[Izq Fon ancho alto],...
                    'Name','Análisis de las fases de las componentes de la marea',...
                    'NumberTitle','off',...
                    'Menubar','figure',...
                    'Color',[1 1 1]);
           %Graficando los componentes secundarias    
           errorbar(varmarea.freq(~fsig),varmarea.tidecon(~fsig,3),varmarea.tidecon(~fsig,4),'.r');
           hold on;
           % Graficando componentes principales
           errorbar(varmarea.freq(fsig),varmarea.tidecon(fsig,3),varmarea.tidecon(fsig,4),'o',...
                    'MarkerFaceColor',[0.04 0.14 0.42]);
           hold off;
           set(gca,'Color',[1 0.97 0.92],...
                    'Ylim',[-45 360+45],...
                    'Xlim',[0 0.5],...
                    'Ytick',(0:90:360),...
                    'TickLength',[0.005;0.01],...
                    'FontSize',Ntexejes,...
                    'FontWeight','bold',...
                    'FontName',Tletra);
           xlabel('Frecuencia (cph)',...
                    'FontSize',NtexEtiXY,...
                    'FontName',Tletra,...
                    'FontWeight','bold');
           ylabel('Fase Greenwich (deg)',...
                    'FontSize',NtexEtiXY,...
                    'FontName',Tletra,...
                    'FontWeight','bold');
%            text(varmarea.freq(fsig),varmarea.tidecon(fsig,3),varmarea.tidecon(fsig,4),'rotation',45,'vertical','base');
           text(.35,330,'Angulos de fase analizados con el 95% CI',...
                    'Color',[0.00 0.00 0.00],...
                    'FontWeight','bold',...
                    'FontName',Tletra,...
                    'FontSize',Ntexleg);
           text(.35,290,'Componentes principales',...
                    'Color',[0.04 0.14 0.42],...
                    'FontWeight','bold',...
                    'FontName',Tletra,...
                    'FontSize',Ntexleg);
           text(.35,250,'Componentes secundarias',...
                    'Color',[1 0.00 0.00],...
                    'FontWeight','bold',...
                    'FontName',Tletra,...
                    'FontSize',Ntexleg);
           title(horzcat('Análisis de las fases de las componentes de la marea ','(',sitio,')'),...
                    'FontWeight','bold',...
                    'FontSize',Ntextit,...
                    'FontName',Tletra);
                
           % Analisis Espectral
           fprintf('Realizando la gráfica de los espectros de energía. \n');
           figure;
           set(gcf,'Units','pixels',...
                    'Position',[Izq Fon ancho alto],...
                    'Name','Análisis de espectral',...
                    'NumberTitle','off',...
                    'Menubar','figure',...
                    'Color',[1 1 1]);
           % Graficando el espectro de la señal original    
           semilogy(F,Pxs,...
                   'LineWidth',4);
           % Graficando el espectro del residuo
           line(F,Pxr,...
                   'Color','r',...
                   'LineWidth',4);
           set(gca,'Color',[1 0.97 0.92],...
                   'FontSize',Ntexejes,...
                   'FontWeight','bold',...
                   'FontName',Tletra);
           xlabel('Frecuencia (cph)',...
                   'FontSize',NtexEtiXY,...
                   'FontName',Tletra,...
                   'FontWeight','bold');
           ylabel('m^2/cph',...
                   'FontSize',NtexEtiXY,...
                   'FontName',Tletra,...
                   'FontWeight','bold');
           text(.25,1e2,'Espectro de energía de la superficie libre del agua sin influencia de marea',...
                    'Color',[0.00 0.00 1.00],...
                    'FontWeight','bold',...
                    'FontName',Tletra,...
                    'FontSize',Ntexleg);    
           text(.25,1e3,'Espectro de energia de la superficie libre del agua registrada',...
                    'Color',[1.00 0.00 0.00],...
                    'FontWeight','bold',...
                    'FontName',Tletra,...
                    'FontSize',Ntexleg);
            title(horzcat('Espectros estimados antes y después de quitar la energía de marea ','(',sitio,')'),...
                    'Color',[0.00 0.00 0.00],...
                    'FontWeight','bold',...
                    'FontName',Tletra,...
                    'FontSize',Ntextit);
                
           % Subfuncion que grafica los contornos
           fprintf('\nDeseas graficar los contornos?\n');
           fprintf('1 = Si y 2 = No\n');
           resc = input('Cual es tu eleccion?: ');
           if resc == 1
               contornomareas(fechas,yprono,Izq,Fon,ancho,alto,sitio,Ntexejes,Tletra,NtexEtiXY,Ntextit);
           end             
                
           fprintf('********************************************************** \n');

           % Regresando a la carpeta de mareas
           cd(ruta);

           fprintf('\nH A   C O N C L U I D O   E L   A N Á L I S I S !\n');
      else
           msgbox('No se eligió ningún archivo!','','warn');
      end
end

% *****************************************************************************************
% *                 S u b f u n c i o n e s   d e l    p r o g r a m a                    *
% *****************************************************************************************











